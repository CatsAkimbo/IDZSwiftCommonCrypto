{"Typealiases.html#/s:20IDZSwiftCommonCrypto9RNGStatusa":{"name":"RNGStatus","abstract":"<p>An alias for <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/Status.html\">Status</a></code></p>"},"Protocols/Updateable.html#/s:20IDZSwiftCommonCrypto10UpdateableP6statusAA6StatusOvp":{"name":"status","abstract":"<p>Status of the calculation.</p>","parent_name":"Updateable"},"Protocols/Updateable.html#/s:20IDZSwiftCommonCrypto10UpdateableP6update6buffer9byteCountxSgSV_SitF":{"name":"update(buffer:byteCount:)","abstract":"<p>Low-level update routine.","parent_name":"Updateable"},"Protocols/Updateable.html#/s:20IDZSwiftCommonCrypto10UpdateablePAAE6update4dataxSg10Foundation4DataV_tF":{"name":"update(data:)","abstract":"<p>Updates the current calculation with data contained in an <code>NSData</code> object.</p>","parent_name":"Updateable"},"Protocols/Updateable.html#/s:20IDZSwiftCommonCrypto10UpdateablePAAE6update9byteArrayxSgSays5UInt8VG_tF":{"name":"update(byteArray:)","abstract":"<p>Updates the current calculation with data contained in a Swift array.</p>","parent_name":"Updateable"},"Protocols/Updateable.html#/s:20IDZSwiftCommonCrypto10UpdateablePAAE6update6stringxSgSS_tF":{"name":"update(string:)","abstract":"<p>Updates the current calculation with data contained in a Swift string.","parent_name":"Updateable"},"Protocols/Updateable.html#/s:20IDZSwiftCommonCrypto10UpdateablePAAE6updateyxSg10Foundation4DataVF":{"name":"update(_:)","abstract":"<p>Updates the current calculation with data contained in an <code>NSData</code> object.</p>","parent_name":"Updateable"},"Protocols/Updateable.html#/s:20IDZSwiftCommonCrypto10UpdateablePAAE6updateyxSgSays5UInt8VGF":{"name":"update(_:)","abstract":"<p>Updates the current calculation with data contained in a Swift array.</p>","parent_name":"Updateable"},"Protocols/Updateable.html#/s:20IDZSwiftCommonCrypto10UpdateablePAAE6updateyxSgSSF":{"name":"update(_:)","abstract":"<p>Updates the current calculation with data contained in a Swift string.","parent_name":"Updateable"},"Protocols/CryptoDigest.html#/s:20IDZSwiftCommonCrypto0C6DigestP6digest9algorithmxAA0D0C9AlgorithmO_tF":{"name":"digest(algorithm:)","abstract":"<p>Calculates a message digest</p>","parent_name":"CryptoDigest"},"Protocols/CryptoDigest.html#/s:20IDZSwiftCommonCrypto0C6DigestPAAE3MD2xvp":{"name":"MD2","abstract":"<p>An MD2 digest of this object</p>","parent_name":"CryptoDigest"},"Protocols/CryptoDigest.html#/s:20IDZSwiftCommonCrypto0C6DigestPAAE3MD4xvp":{"name":"MD4","abstract":"<p>An MD4 digest of this object</p>","parent_name":"CryptoDigest"},"Protocols/CryptoDigest.html#/s:20IDZSwiftCommonCrypto0C6DigestPAAE3MD5xvp":{"name":"MD5","abstract":"<p>An MD5 digest of this object</p>","parent_name":"CryptoDigest"},"Protocols/CryptoDigest.html#/s:20IDZSwiftCommonCrypto0C6DigestPAAE4SHA1xvp":{"name":"SHA1","abstract":"<p>An SHA1 digest of this object</p>","parent_name":"CryptoDigest"},"Protocols/CryptoDigest.html#/s:20IDZSwiftCommonCrypto0C6DigestPAAE6SHA224xvp":{"name":"SHA224","abstract":"<p>An SHA224 digest of this object</p>","parent_name":"CryptoDigest"},"Protocols/CryptoDigest.html#/s:20IDZSwiftCommonCrypto0C6DigestPAAE6SHA256xvp":{"name":"SHA256","abstract":"<p>An SHA256 digest of this object</p>","parent_name":"CryptoDigest"},"Protocols/CryptoDigest.html#/s:20IDZSwiftCommonCrypto0C6DigestPAAE6SHA384xvp":{"name":"SHA384","abstract":"<p>An SHA384 digest of this object</p>","parent_name":"CryptoDigest"},"Protocols/CryptoDigest.html#/s:20IDZSwiftCommonCrypto0C6DigestPAAE6SHA512xvp":{"name":"SHA512","abstract":"<p>An SHA512 digest of this object</p>","parent_name":"CryptoDigest"},"Protocols/CryptoDigest.html":{"name":"CryptoDigest","abstract":"<p>Implements a simplified API for calculating digests over single buffers</p>"},"Protocols/Updateable.html":{"name":"Updateable","abstract":"<p>A protocol for calculations that can be updated with incremental data buffers.</p>"},"Functions.html#/s:20IDZSwiftCommonCrypto9arrayFrom9hexStringSays5UInt8VGSS_tF":{"name":"arrayFrom(hexString:)","abstract":"<p>Converts a string of hexadecimal digits to a Swift array.</p>"},"Functions.html#/s:20IDZSwiftCommonCrypto9arrayFrom6stringSays5UInt8VGSS_tF":{"name":"arrayFrom(string:)","abstract":"<p>Converts a Swift UTF-8 String to a Swift array.</p>"},"Functions.html#/s:20IDZSwiftCommonCrypto8dataFrom9hexString10Foundation4DataVSS_tF":{"name":"dataFrom(hexString:)","abstract":"<p>Converts a string of hexadecimal digits to an <code>NSData</code> object.</p>"},"Functions.html#/s:20IDZSwiftCommonCrypto8dataFrom9byteArray10Foundation4DataVSays5UInt8VG_tF":{"name":"dataFrom(byteArray:)","abstract":"<p>Converts a Swift array to an <code>NSData</code> object.</p>"},"Functions.html#/s:20IDZSwiftCommonCrypto9hexString9fromArray9uppercaseSSSays5UInt8VG_SbtF":{"name":"hexString(fromArray:uppercase:)","abstract":"<p>Converts a Swift array to a string of hexadecimal digits.</p>"},"Functions.html#/s:20IDZSwiftCommonCrypto7hexList9fromArraySSSays5UInt8VG_tF":{"name":"hexList(fromArray:)","abstract":"<p>Converts a Swift array to a Swift <code>String</code> containing a comma separated list of bytes."},"Functions.html#/s:20IDZSwiftCommonCrypto7zeroPad5array9blockSizeSays5UInt8VGAG_SitF":{"name":"zeroPad(array:blockSize:)","abstract":"<p>Zero pads a Swift array such that it is an integral number of <code>blockSizeinBytes</code> long.</p>"},"Functions.html#/s:20IDZSwiftCommonCrypto7zeroPad6string9blockSizeSays5UInt8VGSS_SitF":{"name":"zeroPad(string:blockSize:)","abstract":"<p>Zero pads a Swift string (after UTF8 conversion)  such that it is an integral number of <code>blockSizeinBytes</code> long.</p>"},"Functions.html#/s:20IDZSwiftCommonCrypto25removeTrailingZeroPadding5arraySays5UInt8VGAF_tF":{"name":"removeTrailingZeroPadding(array:)","abstract":"<p>Removes trailing zero padding. Removes each zero ( ie == 0x00 ) byte from the end of the array</p>"},"Extensions/String.html#/s:SS20IDZSwiftCommonCryptoE6digest9algorithmSSAA6DigestC9AlgorithmO_tF":{"name":"digest(algorithm:)","abstract":"<p>Calculates the Message Digest for this string.","parent_name":"String"},"Extensions/Data.html#/s:10Foundation4DataV20IDZSwiftCommonCryptoE6digest9algorithmAcD6DigestC9AlgorithmO_tF":{"name":"digest(algorithm:)","abstract":"<p>Calculates the Message Digest for this data.</p>","parent_name":"Data"},"Extensions/Data.html":{"name":"Data"},"Extensions/String.html":{"name":"String"},"Enums/Status.html#/s:20IDZSwiftCommonCrypto6StatusO7successyA2CmF":{"name":"success","abstract":"<p>Successful</p>","parent_name":"Status"},"Enums/Status.html#/s:20IDZSwiftCommonCrypto6StatusO10paramErroryA2CmF":{"name":"paramError","abstract":"<p>Parameter Error</p>","parent_name":"Status"},"Enums/Status.html#/s:20IDZSwiftCommonCrypto6StatusO14bufferTooSmallyA2CmF":{"name":"bufferTooSmall","abstract":"<p>Buffer too Small</p>","parent_name":"Status"},"Enums/Status.html#/s:20IDZSwiftCommonCrypto6StatusO13memoryFailureyA2CmF":{"name":"memoryFailure","abstract":"<p>Memory Failure</p>","parent_name":"Status"},"Enums/Status.html#/s:20IDZSwiftCommonCrypto6StatusO14alignmentErroryA2CmF":{"name":"alignmentError","abstract":"<p>Alignment Error</p>","parent_name":"Status"},"Enums/Status.html#/s:20IDZSwiftCommonCrypto6StatusO11decodeErroryA2CmF":{"name":"decodeError","abstract":"<p>Decode Error</p>","parent_name":"Status"},"Enums/Status.html#/s:20IDZSwiftCommonCrypto6StatusO13unimplementedyA2CmF":{"name":"unimplemented","abstract":"<p>Unimplemented</p>","parent_name":"Status"},"Enums/Status.html#/s:20IDZSwiftCommonCrypto6StatusO8overflowyA2CmF":{"name":"overflow","abstract":"<p>Overflow</p>","parent_name":"Status"},"Enums/Status.html#/s:20IDZSwiftCommonCrypto6StatusO10rngFailureyA2CmF":{"name":"rngFailure","abstract":"<p>Random Number Generator Err</p>","parent_name":"Status"},"Enums/Status.html#/s:20IDZSwiftCommonCrypto6StatusO5toRaws5Int32VyF":{"name":"toRaw()","abstract":"<p>Converts this value to a native <code>CCCryptorStatus</code> value.</p>","parent_name":"Status"},"Enums/Status.html#/s:20IDZSwiftCommonCrypto6StatusO11descriptionSSvp":{"name":"description","abstract":"<p>Obtain human-readable string from enum value.</p>","parent_name":"Status"},"Enums/Status.html#/s:20IDZSwiftCommonCrypto6StatusO7fromRaw6statusACSgs5Int32V_tFZ":{"name":"fromRaw(status:)","abstract":"<p>Create enum value from raw <code>CCCryptorStatus</code> value.</p>","parent_name":"Status"},"Enums/Status.html":{"name":"Status","abstract":"<p>Links the native CommonCryptoStatus enumeration to Swiftier versions.</p>"},"Classes/StreamCryptor/Options.html#/s:SY8RawValueQa":{"name":"RawValue","parent_name":"Options"},"Classes/StreamCryptor/Options.html#/s:SY8rawValue03RawB0Qzvp":{"name":"rawValue","parent_name":"Options"},"Classes/StreamCryptor/Options.html#/s:20IDZSwiftCommonCrypto13StreamCryptorC7OptionsV8rawValueAESi_tcfc":{"name":"init(rawValue:)","abstract":"<p>Convert from a native value (i.e. <code>0</code>, <code>kCCOptionPKCS7Padding</code>, <code>kCCOptionECBMode</code>)</p>","parent_name":"Options"},"Classes/StreamCryptor/Options.html#/s:20IDZSwiftCommonCrypto13StreamCryptorC7OptionsVyAESicfc":{"name":"init(_:)","abstract":"<p>Convert from a native value (i.e. <code>0</code>, <code>kCCOptionPKCS7Padding</code>, <code>kCCOptionECBMode</code>)</p>","parent_name":"Options"},"Classes/StreamCryptor/Options.html#/s:20IDZSwiftCommonCrypto13StreamCryptorC7OptionsV4NoneAEvpZ":{"name":"None","abstract":"<p>No options</p>","parent_name":"Options"},"Classes/StreamCryptor/Options.html#/s:20IDZSwiftCommonCrypto13StreamCryptorC7OptionsV12PKCS7PaddingAEvpZ":{"name":"PKCS7Padding","abstract":"<p>Use padding. Needed unless the input is a integral number of blocks long.</p>","parent_name":"Options"},"Classes/StreamCryptor/Options.html#/s:20IDZSwiftCommonCrypto13StreamCryptorC7OptionsV7ECBModeAEvpZ":{"name":"ECBMode","abstract":"<p>Electronic Code Book Mode. Don&rsquo;t use this.</p>","parent_name":"Options"},"Classes/StreamCryptor/Algorithm.html#/s:20IDZSwiftCommonCrypto13StreamCryptorC9AlgorithmO3aesyA2EmF":{"name":"aes","abstract":"<p>Advanced Encryption Standard</p>","parent_name":"Algorithm"},"Classes/StreamCryptor/Algorithm.html#/s:20IDZSwiftCommonCrypto13StreamCryptorC9AlgorithmO3desyA2EmF":{"name":"des","abstract":"<p>Data Encryption Standard</p>","parent_name":"Algorithm"},"Classes/StreamCryptor/Algorithm.html#/s:20IDZSwiftCommonCrypto13StreamCryptorC9AlgorithmO9tripleDESyA2EmF":{"name":"tripleDES","abstract":"<p>Triple DES</p>","parent_name":"Algorithm"},"Classes/StreamCryptor/Algorithm.html#/s:20IDZSwiftCommonCrypto13StreamCryptorC9AlgorithmO4castyA2EmF":{"name":"cast","abstract":"<p>CAST</p>","parent_name":"Algorithm"},"Classes/StreamCryptor/Algorithm.html#/s:20IDZSwiftCommonCrypto13StreamCryptorC9AlgorithmO3rc2yA2EmF":{"name":"rc2","abstract":"<p>RC2</p>","parent_name":"Algorithm"},"Classes/StreamCryptor/Algorithm.html#/s:20IDZSwiftCommonCrypto13StreamCryptorC9AlgorithmO8blowfishyA2EmF":{"name":"blowfish","abstract":"<p>Blowfish</p>","parent_name":"Algorithm"},"Classes/StreamCryptor/Algorithm.html#/s:20IDZSwiftCommonCrypto13StreamCryptorC9AlgorithmO9blockSizeSiyF":{"name":"blockSize()","abstract":"<p>Blocksize, in bytes, of algorithm.</p>","parent_name":"Algorithm"},"Classes/StreamCryptor/Padding.html#/s:20IDZSwiftCommonCrypto13StreamCryptorC7PaddingO02NoF0yA2EmF":{"name":"NoPadding","abstract":"<p>No Padding -&gt; Use only when you messages have correct block size.</p>","parent_name":"Padding"},"Classes/StreamCryptor/Padding.html#/s:20IDZSwiftCommonCrypto13StreamCryptorC7PaddingO05PKCS7F0yA2EmF":{"name":"PKCS7Padding","abstract":"<p>PKCS7 Padding</p>","parent_name":"Padding"},"Classes/StreamCryptor/Mode.html#/s:20IDZSwiftCommonCrypto13StreamCryptorC4ModeO3ECByA2EmF":{"name":"ECB","abstract":"<p>Electronic Code Book</p>","parent_name":"Mode"},"Classes/StreamCryptor/Mode.html#/s:20IDZSwiftCommonCrypto13StreamCryptorC4ModeO3CBCyA2EmF":{"name":"CBC","abstract":"<p>Cipher Block Chaining</p>","parent_name":"Mode"},"Classes/StreamCryptor/Mode.html#/s:20IDZSwiftCommonCrypto13StreamCryptorC4ModeO3CFByA2EmF":{"name":"CFB","abstract":"<p>Cipher FeeBack</p>","parent_name":"Mode"},"Classes/StreamCryptor/Mode.html#/s:20IDZSwiftCommonCrypto13StreamCryptorC4ModeO3CTRyA2EmF":{"name":"CTR","abstract":"<p>Counter</p>","parent_name":"Mode"},"Classes/StreamCryptor/Mode.html#/s:20IDZSwiftCommonCrypto13StreamCryptorC4ModeO2F8yA2EmF":{"name":"F8","abstract":"<p>Unimplemented for now (not included)</p>","parent_name":"Mode"},"Classes/StreamCryptor/Mode.html#/s:20IDZSwiftCommonCrypto13StreamCryptorC4ModeO3LRWyA2EmF":{"name":"LRW","abstract":"<p>Unimplemented for now (not included)</p>","parent_name":"Mode"},"Classes/StreamCryptor/Mode.html#/s:20IDZSwiftCommonCrypto13StreamCryptorC4ModeO3OFByA2EmF":{"name":"OFB","abstract":"<p>Output FeedBack</p>","parent_name":"Mode"},"Classes/StreamCryptor/Mode.html#/s:20IDZSwiftCommonCrypto13StreamCryptorC4ModeO3XTSyA2EmF":{"name":"XTS","abstract":"<p>Xor-encode-xor Tweaked with ciphertext Stealing</p>","parent_name":"Mode"},"Classes/StreamCryptor/Mode.html#/s:20IDZSwiftCommonCrypto13StreamCryptorC4ModeO3RC4yA2EmF":{"name":"RC4","abstract":"<p>RC4 streaming</p>","parent_name":"Mode"},"Classes/StreamCryptor/Mode.html#/s:20IDZSwiftCommonCrypto13StreamCryptorC4ModeO4CFB8yA2EmF":{"name":"CFB8","abstract":"<p>Cipher FeebBack with 8-bit shifts</p>","parent_name":"Mode"},"Classes/StreamCryptor/ValidKeySize.html#/s:20IDZSwiftCommonCrypto13StreamCryptorC12ValidKeySizeO5fixedyAESicAEmF":{"name":"fixed(_:)","abstract":"<p>Use when there is a single valid key size.</p>","parent_name":"ValidKeySize"},"Classes/StreamCryptor/ValidKeySize.html#/s:20IDZSwiftCommonCrypto13StreamCryptorC12ValidKeySizeO8discreteyAESaySiGcAEmF":{"name":"discrete(_:)","abstract":"<p>Used when there is a discrete set of values. This pre-dates Swift Set.</p>","parent_name":"ValidKeySize"},"Classes/StreamCryptor/ValidKeySize.html#/s:20IDZSwiftCommonCrypto13StreamCryptorC12ValidKeySizeO5rangeyAESi_SitcAEmF":{"name":"range(_:_:)","abstract":"<p>Used when a continuous range of key sizes are valid.</p>","parent_name":"ValidKeySize"},"Classes/StreamCryptor/Operation.html#/s:20IDZSwiftCommonCrypto13StreamCryptorC9OperationO7encryptyA2EmF":{"name":"encrypt","abstract":"<p>Encrypting</p>","parent_name":"Operation"},"Classes/StreamCryptor/Operation.html#/s:20IDZSwiftCommonCrypto13StreamCryptorC9OperationO7decryptyA2EmF":{"name":"decrypt","abstract":"<p>Decrypting</p>","parent_name":"Operation"},"Classes/StreamCryptor/Operation.html":{"name":"Operation","abstract":"<p>Enumerates Cryptor operations</p>","parent_name":"StreamCryptor"},"Classes/StreamCryptor/ValidKeySize.html":{"name":"ValidKeySize","abstract":"<p>Values used to specify the valid key sizes for an algorithm.","parent_name":"StreamCryptor"},"Classes/StreamCryptor/Mode.html":{"name":"Mode","abstract":"<p>Enumerates encryption mode</p>","parent_name":"StreamCryptor"},"Classes/StreamCryptor/Padding.html":{"name":"Padding","abstract":"<p>Enumerated encryption paddings","parent_name":"StreamCryptor"},"Classes/StreamCryptor/Algorithm.html":{"name":"Algorithm","abstract":"<p>Enumerates available algorithms</p>","parent_name":"StreamCryptor"},"Classes/StreamCryptor/Options.html":{"name":"Options","abstract":"<p>Maps CommonCryptoOptions onto a Swift struct.</p>","parent_name":"StreamCryptor"},"Classes/StreamCryptor.html#/s:20IDZSwiftCommonCrypto13StreamCryptorC6statusAA6StatusOvp":{"name":"status","abstract":"<p>The status code resulting from the last method call to this Cryptor.","parent_name":"StreamCryptor"},"Classes/StreamCryptor.html#/s:20IDZSwiftCommonCrypto13StreamCryptorC9operation9algorithm7options3key2ivA2C9OperationO_AC9AlgorithmOAC7OptionsVSays5UInt8VGAQtcfc":{"name":"init(operation:algorithm:options:key:iv:)","abstract":"<p>Creates a new StreamCryptor.</p>","parent_name":"StreamCryptor"},"Classes/StreamCryptor.html#/s:20IDZSwiftCommonCrypto13StreamCryptorC9operation9algorithm7options3key2ivA2C9OperationO_AC9AlgorithmOAC7OptionsVS2Stcfc":{"name":"init(operation:algorithm:options:key:iv:)","abstract":"<p>Creates a new StreamCryptor.</p>","parent_name":"StreamCryptor"},"Classes/StreamCryptor.html#/s:20IDZSwiftCommonCrypto13StreamCryptorC9operation9algorithm4mode7padding3key2ivA2C9OperationO_AC9AlgorithmOAC4ModeOAC7PaddingOSays5UInt8VGATtcfc":{"name":"init(operation:algorithm:mode:padding:key:iv:)","abstract":"<p>Creates a new StreamCryptor</p>","parent_name":"StreamCryptor"},"Classes/StreamCryptor.html#/s:20IDZSwiftCommonCrypto13StreamCryptorC9operation9algorithm4mode7padding3key2ivA2C9OperationO_AC9AlgorithmOAC4ModeOAC7PaddingOS2Stcfc":{"name":"init(operation:algorithm:mode:padding:key:iv:)","abstract":"<p>Creates a new StreamCryptor</p>","parent_name":"StreamCryptor"},"Classes/StreamCryptor.html#/s:20IDZSwiftCommonCrypto13StreamCryptorC6update6dataIn12byteArrayOutSi_AA6StatusOt10Foundation4DataV_Says5UInt8VGztF":{"name":"update(dataIn:byteArrayOut:)","abstract":"<p>Add the contents of an Objective-C NSData buffer to the current encryption/decryption operation.</p>","parent_name":"StreamCryptor"},"Classes/StreamCryptor.html#/s:20IDZSwiftCommonCrypto13StreamCryptorC6update11byteArrayIn0gH3OutSi_AA6StatusOtSays5UInt8VG_AKztF":{"name":"update(byteArrayIn:byteArrayOut:)","abstract":"<p>Add the contents of a Swift byte array to the current encryption/decryption operation.</p>","parent_name":"StreamCryptor"},"Classes/StreamCryptor.html#/s:20IDZSwiftCommonCrypto13StreamCryptorC6update8stringIn12byteArrayOutSi_AA6StatusOtSS_Says5UInt8VGztF":{"name":"update(stringIn:byteArrayOut:)","abstract":"<p>Add the contents of a string (interpreted as UTF8) to the current encryption/decryption operation.</p>","parent_name":"StreamCryptor"},"Classes/StreamCryptor.html#/s:20IDZSwiftCommonCrypto13StreamCryptorC5final12byteArrayOutSi_AA6StatusOtSays5UInt8VGz_tF":{"name":"final(byteArrayOut:)","abstract":"<p>Retrieves all remaining encrypted or decrypted data from this cryptor.</p>","parent_name":"StreamCryptor"},"Classes/StreamCryptor.html#/s:20IDZSwiftCommonCrypto13StreamCryptorC9operation9algorithm7options9keyBuffer0I9ByteCount02ivJ00mkL0A2C9OperationO_AC9AlgorithmOAC7OptionsVSVSiSVSitcfc":{"name":"init(operation:algorithm:options:keyBuffer:keyByteCount:ivBuffer:ivByteCount:)","parent_name":"StreamCryptor"},"Classes/StreamCryptor.html#/s:20IDZSwiftCommonCrypto13StreamCryptorC9operation9algorithm4mode7padding9keyBuffer0J9ByteCount02ivK00nlM0A2C9OperationO_AC9AlgorithmOAC4ModeOAC7PaddingOSVSiSVSitcfc":{"name":"init(operation:algorithm:mode:padding:keyBuffer:keyByteCount:ivBuffer:ivByteCount:)","parent_name":"StreamCryptor"},"Classes/StreamCryptor.html#/s:20IDZSwiftCommonCrypto13StreamCryptorC6update8bufferIn09byteCountH00G3Out0i8CapacityK00ijK0AA6StatusOSV_SiSvS2iztF":{"name":"update(bufferIn:byteCountIn:bufferOut:byteCapacityOut:byteCountOut:)","parent_name":"StreamCryptor"},"Classes/StreamCryptor.html#/s:20IDZSwiftCommonCrypto13StreamCryptorC5final9bufferOut012byteCapacityH00i5CountH0AA6StatusOSv_S2iztF":{"name":"final(bufferOut:byteCapacityOut:byteCountOut:)","abstract":"<p>Retrieves all remaining encrypted or decrypted data from this cryptor.</p>","parent_name":"StreamCryptor"},"Classes/StreamCryptor.html#/s:20IDZSwiftCommonCrypto13StreamCryptorC15getOutputLength14inputByteCount7isFinalS2i_SbtF":{"name":"getOutputLength(inputByteCount:isFinal:)","abstract":"<p>Determines the number of bytes that wil be output by this Cryptor if inputBytes of additional","parent_name":"StreamCryptor"},"Classes/Random.html#/s:20IDZSwiftCommonCrypto6RandomC13generateBytes5bytes9byteCountAA6StatusOSv_SitFZ":{"name":"generateBytes(bytes:byteCount:)","abstract":"<p>Wraps native CCRandomeGenerateBytes call.</p>","parent_name":"Random"},"Classes/Random.html#/s:20IDZSwiftCommonCrypto6RandomC13generateBytes9byteCountSays5UInt8VGSi_tKFZ":{"name":"generateBytes(byteCount:)","abstract":"<p>Generates an array of random bytes.</p>","parent_name":"Random"},"Classes/Random.html#/s:20IDZSwiftCommonCrypto6RandomC18generateBytesThrow9byteCountSays5UInt8VGSi_tKFZ":{"name":"generateBytesThrow(byteCount:)","abstract":"<p>A version of generateBytes that always throws an error.</p>","parent_name":"Random"},"Classes/PBKDF/PseudoRandomAlgorithm.html#/s:20IDZSwiftCommonCrypto5PBKDFC21PseudoRandomAlgorithmO4sha1yA2EmF":{"name":"sha1","abstract":"<p>Secure Hash Algorithm 1</p>","parent_name":"PseudoRandomAlgorithm"},"Classes/PBKDF/PseudoRandomAlgorithm.html#/s:20IDZSwiftCommonCrypto5PBKDFC21PseudoRandomAlgorithmO6sha224yA2EmF":{"name":"sha224","abstract":"<p>Secure Hash Algorithm 2 224-bit</p>","parent_name":"PseudoRandomAlgorithm"},"Classes/PBKDF/PseudoRandomAlgorithm.html#/s:20IDZSwiftCommonCrypto5PBKDFC21PseudoRandomAlgorithmO6sha256yA2EmF":{"name":"sha256","abstract":"<p>Secure Hash Algorithm 2 256-bit</p>","parent_name":"PseudoRandomAlgorithm"},"Classes/PBKDF/PseudoRandomAlgorithm.html#/s:20IDZSwiftCommonCrypto5PBKDFC21PseudoRandomAlgorithmO6sha384yA2EmF":{"name":"sha384","abstract":"<p>Secure Hash Algorithm 2 384-bit</p>","parent_name":"PseudoRandomAlgorithm"},"Classes/PBKDF/PseudoRandomAlgorithm.html#/s:20IDZSwiftCommonCrypto5PBKDFC21PseudoRandomAlgorithmO6sha512yA2EmF":{"name":"sha512","abstract":"<p>Secure Hash Algorithm 2 512-bit</p>","parent_name":"PseudoRandomAlgorithm"},"Classes/PBKDF/PseudoRandomAlgorithm.html":{"name":"PseudoRandomAlgorithm","abstract":"<p>Enumerates available pseudo random algorithms</p>","parent_name":"PBKDF"},"Classes/PBKDF.html#/s:20IDZSwiftCommonCrypto5PBKDFC9calibrate14passwordLength04saltG09algorithm010derivedKeyG04msecSuSi_SiAC21PseudoRandomAlgorithmOSis6UInt32VtFZ":{"name":"calibrate(passwordLength:saltLength:algorithm:derivedKeyLength:msec:)","abstract":"<p>Determines the (approximate) number of iterations of the key derivation algorithm that need","parent_name":"PBKDF"},"Classes/PBKDF.html#/s:20IDZSwiftCommonCrypto5PBKDFC9deriveKey8password4salt3prf6rounds07derivedF6LengthSays5UInt8VGSS_SSAC21PseudoRandomAlgorithmOs6UInt32VSutFZ":{"name":"deriveKey(password:salt:prf:rounds:derivedKeyLength:)","abstract":"<p>Derives key material from a password and salt.</p>","parent_name":"PBKDF"},"Classes/PBKDF.html#/s:20IDZSwiftCommonCrypto5PBKDFC9deriveKey8password4salt3prf6rounds07derivedF6LengthSays5UInt8VGSS_AlC21PseudoRandomAlgorithmOs6UInt32VSutFZ":{"name":"deriveKey(password:salt:prf:rounds:derivedKeyLength:)","abstract":"<p>Derives key material from a password and salt.</p>","parent_name":"PBKDF"},"Classes/PBKDF.html#/s:20IDZSwiftCommonCrypto5PBKDFC9deriveKey8password0G3Len4salt0iH03prf6rounds07derivedF00lfH0ySPys4Int8VG_SiSPys5UInt8VGSiAC21PseudoRandomAlgorithmOs6UInt32VSpyAQGSitFZ":{"name":"deriveKey(password:passwordLen:salt:saltLen:prf:rounds:derivedKey:derivedKeyLen:)","abstract":"<p>Derives key material from a password buffer.</p>","parent_name":"PBKDF"},"Classes/HMAC/Algorithm.html#/s:20IDZSwiftCommonCrypto4HMACC9AlgorithmO3md5yA2EmF":{"name":"md5","abstract":"<p>Message Digest 5</p>","parent_name":"Algorithm"},"Classes/HMAC/Algorithm.html#/s:20IDZSwiftCommonCrypto4HMACC9AlgorithmO4sha1yA2EmF":{"name":"sha1","abstract":"<p>Secure Hash Algorithm 1</p>","parent_name":"Algorithm"},"Classes/HMAC/Algorithm.html#/s:20IDZSwiftCommonCrypto4HMACC9AlgorithmO6sha224yA2EmF":{"name":"sha224","abstract":"<p>Secure Hash Algorithm 2 224-bit</p>","parent_name":"Algorithm"},"Classes/HMAC/Algorithm.html#/s:20IDZSwiftCommonCrypto4HMACC9AlgorithmO6sha256yA2EmF":{"name":"sha256","abstract":"<p>Secure Hash Algorithm 2 256-bit</p>","parent_name":"Algorithm"},"Classes/HMAC/Algorithm.html#/s:20IDZSwiftCommonCrypto4HMACC9AlgorithmO6sha384yA2EmF":{"name":"sha384","abstract":"<p>Secure Hash Algorithm 2 384-bit</p>","parent_name":"Algorithm"},"Classes/HMAC/Algorithm.html#/s:20IDZSwiftCommonCrypto4HMACC9AlgorithmO6sha512yA2EmF":{"name":"sha512","abstract":"<p>Secure Hash Algorithm 2 512-bit</p>","parent_name":"Algorithm"},"Classes/HMAC/Algorithm.html#/s:20IDZSwiftCommonCrypto4HMACC9AlgorithmO12digestLengthSiyF":{"name":"digestLength()","abstract":"<p>Obtains the digest length produced by this algorithm (in bytes).</p>","parent_name":"Algorithm"},"Classes/HMAC/Algorithm.html":{"name":"Algorithm","abstract":"<p>Enumerates available algorithms.</p>","parent_name":"HMAC"},"Classes/HMAC.html#/s:20IDZSwiftCommonCrypto4HMACC6statusAA6StatusOvp":{"name":"status","abstract":"<p>Status of the calculation</p>","parent_name":"HMAC"},"Classes/HMAC.html#/s:20IDZSwiftCommonCrypto4HMACC9algorithm3keyA2C9AlgorithmO_10Foundation4DataVtcfc":{"name":"init(algorithm:key:)","abstract":"<p>Creates a new HMAC instance with the specified algorithm and key.</p>","parent_name":"HMAC"},"Classes/HMAC.html#/s:20IDZSwiftCommonCrypto4HMACC9algorithm3keyA2C9AlgorithmO_Says5UInt8VGtcfc":{"name":"init(algorithm:key:)","abstract":"<p>Creates a new HMAC instance with the specified algorithm and key.</p>","parent_name":"HMAC"},"Classes/HMAC.html#/s:20IDZSwiftCommonCrypto4HMACC9algorithm3keyA2C9AlgorithmO_SStcfc":{"name":"init(algorithm:key:)","abstract":"<p>Creates a new HMAC instance with the specified algorithm and key string.","parent_name":"HMAC"},"Classes/HMAC.html#/s:20IDZSwiftCommonCrypto4HMACC6update6buffer9byteCountACXDSgSV_SitF":{"name":"update(buffer:byteCount:)","abstract":"<p>Updates the calculation of the HMAC with the contents of a buffer.</p>","parent_name":"HMAC"},"Classes/HMAC.html#/s:20IDZSwiftCommonCrypto4HMACC5finalSays5UInt8VGyF":{"name":"final()","abstract":"<p>Finalizes the HMAC calculation</p>","parent_name":"HMAC"},"Classes/Digest/Algorithm.html#/s:20IDZSwiftCommonCrypto6DigestC9AlgorithmO3md2yA2EmF":{"name":"md2","abstract":"<p>Message Digest 2 See: <a href=\"http://en.wikipedia.org/wiki/MD2_(cryptography)\">http://en.wikipedia.org/wiki/MD2_(cryptography)</a></p>","parent_name":"Algorithm"},"Classes/Digest/Algorithm.html#/s:20IDZSwiftCommonCrypto6DigestC9AlgorithmO3md4yA2EmF":{"name":"md4","abstract":"<p>Message Digest 4</p>","parent_name":"Algorithm"},"Classes/Digest/Algorithm.html#/s:20IDZSwiftCommonCrypto6DigestC9AlgorithmO3md5yA2EmF":{"name":"md5","abstract":"<p>Message Digest 5</p>","parent_name":"Algorithm"},"Classes/Digest/Algorithm.html#/s:20IDZSwiftCommonCrypto6DigestC9AlgorithmO4sha1yA2EmF":{"name":"sha1","abstract":"<p>Secure Hash Algorithm 1</p>","parent_name":"Algorithm"},"Classes/Digest/Algorithm.html#/s:20IDZSwiftCommonCrypto6DigestC9AlgorithmO6sha224yA2EmF":{"name":"sha224","abstract":"<p>Secure Hash Algorithm 2 224-bit</p>","parent_name":"Algorithm"},"Classes/Digest/Algorithm.html#/s:20IDZSwiftCommonCrypto6DigestC9AlgorithmO6sha256yA2EmF":{"name":"sha256","abstract":"<p>Secure Hash Algorithm 2 256-bit</p>","parent_name":"Algorithm"},"Classes/Digest/Algorithm.html#/s:20IDZSwiftCommonCrypto6DigestC9AlgorithmO6sha384yA2EmF":{"name":"sha384","abstract":"<p>Secure Hash Algorithm 2 384-bit</p>","parent_name":"Algorithm"},"Classes/Digest/Algorithm.html#/s:20IDZSwiftCommonCrypto6DigestC9AlgorithmO6sha512yA2EmF":{"name":"sha512","abstract":"<p>Secure Hash Algorithm 2 512-bit</p>","parent_name":"Algorithm"},"Classes/Digest.html#/s:20IDZSwiftCommonCrypto6DigestC6statusAA6StatusOvp":{"name":"status","abstract":"<p>The status of the Digest.","parent_name":"Digest"},"Classes/Digest/Algorithm.html":{"name":"Algorithm","abstract":"<p>Enumerates available Digest algorithms</p>","parent_name":"Digest"},"Classes/Digest.html#/s:20IDZSwiftCommonCrypto6DigestC9algorithmA2C9AlgorithmO_tcfc":{"name":"init(algorithm:)","abstract":"<p>Create an algorithm-specific digest calculator</p>","parent_name":"Digest"},"Classes/Digest.html#/s:20IDZSwiftCommonCrypto6DigestC6update6buffer9byteCountACXDSgSV_SitF":{"name":"update(buffer:byteCount:)","abstract":"<p>Low-level update routine. Updates the message digest calculation with","parent_name":"Digest"},"Classes/Digest.html#/s:20IDZSwiftCommonCrypto6DigestC5finalSays5UInt8VGyF":{"name":"final()","abstract":"<p>Completes the calculate of the messge digest</p>","parent_name":"Digest"},"Classes/Cryptor.html#/s:20IDZSwiftCommonCrypto7CryptorC5finalSays5UInt8VGSgyF":{"name":"final()","abstract":"<p>Retrieves the encrypted or decrypted data.</p>","parent_name":"Cryptor"},"Classes/Cryptor.html#/s:20IDZSwiftCommonCrypto7CryptorC6update6buffer9byteCountACXDSgSV_SitF":{"name":"update(buffer:byteCount:)","abstract":"<p>Upates the accumulated encrypted/decrypted data with the contents","parent_name":"Cryptor"},"Classes/Cryptor.html":{"name":"Cryptor","abstract":"<p>Encrypts or decrypts, accumulating result.</p>"},"Classes/Digest.html":{"name":"Digest","abstract":"<p>Public API for message digests.</p>"},"Classes/HMAC.html":{"name":"HMAC","abstract":"<p>Calculates a cryptographic Hash-Based Message Authentication Code (HMAC).</p>"},"Classes/PBKDF.html":{"name":"PBKDF","abstract":"<p>Derives key material from a password or passphrase.</p>"},"Classes/Random.html":{"name":"Random","abstract":"<p>Generates buffers of random bytes.</p>"},"Classes/StreamCryptor.html":{"name":"StreamCryptor","abstract":"<p>Encrypts or decrypts return results as they become available.</p>"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Enums.html":{"name":"Enumerations","abstract":"<p>The following enumerations are available globally.</p>"},"Extensions.html":{"name":"Extensions","abstract":"<p>The following extensions are available globally.</p>"},"Functions.html":{"name":"Functions","abstract":"<p>The following functions are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"},"Typealiases.html":{"name":"Type Aliases","abstract":"<p>The following type aliases are available globally.</p>"}}